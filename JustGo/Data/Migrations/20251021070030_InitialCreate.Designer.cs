// <auto-generated />
using System;
using JustGo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JustGo.Data.Migrations
{
    [DbContext(typeof(TravelContext))]
    [Migration("20251021070030_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JustGo.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"), 1L, 1);

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("BlogId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("JustGo.Models.BlogDetails", b =>
                {
                    b.Property<int>("DetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailsId"), 1L, 1);

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    b.Property<string>("Describe")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EndtTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Images")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int")
                        .HasColumnName("PlaceID");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("DetailsId")
                        .HasName("PK_DetailsID");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogDetails");
                });

            modelBuilder.Entity("JustGo.Models.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlaceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaceId"), 1L, 1);

                    b.Property<string>("Add")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Closetime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("IntClosetime")
                        .HasColumnType("int")
                        .HasColumnName("intClosetime");

                    b.Property<int?>("IntOpentime")
                        .HasColumnType("int")
                        .HasColumnName("intOpentime");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(9,7)")
                        .HasColumnName("lat");

                    b.Property<decimal>("Lng")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("lng");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opentime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Tel")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("Timestay")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("PlaceId");

                    b.HasIndex(new[] { "Lat", "Lng", "Class", "Region" }, "IX_Place");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("JustGo.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.Property<bool?>("WeatherWarning")
                        .HasColumnType("bit");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("JustGo.Models.ScheduleDetails", b =>
                {
                    b.Property<int>("DetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailsId"), 1L, 1);

                    b.Property<DateTime>("EndtTime")
                        .HasColumnType("datetime");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int")
                        .HasColumnName("PlaceID");

                    b.Property<int?>("Pop")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Temperature")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("Uvi")
                        .HasColumnType("int");

                    b.Property<bool?>("WeatherWarning")
                        .HasColumnType("bit");

                    b.HasKey("DetailsId")
                        .HasName("PK_DeatisID");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDetails");
                });

            modelBuilder.Entity("JustGo.Models.UserKeep", b =>
                {
                    b.Property<int>("KeepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KeepID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeepId"), 1L, 1);

                    b.Property<int>("KeepClass")
                        .HasColumnType("int");

                    b.Property<int>("KeepNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("KeepId")
                        .HasName("PK_KeepID");

                    b.ToTable("UserKeep");
                });

            modelBuilder.Entity("JustGo.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("endTime");

                    b.Property<string>("Location")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("location");

                    b.Property<string>("LocationsName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("locationsName");

                    b.Property<int?>("MaxT")
                        .HasColumnType("int")
                        .HasColumnName("maxT");

                    b.Property<int?>("MinT")
                        .HasColumnType("int")
                        .HasColumnName("minT");

                    b.Property<int?>("Pop12h")
                        .HasColumnType("int")
                        .HasColumnName("pop12h");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("startTime");

                    b.Property<int?>("Uvi")
                        .HasColumnType("int")
                        .HasColumnName("uvi");

                    b.Property<string>("Wx")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wx");

                    b.HasKey("Id");

                    b.ToTable("weather", (string)null);
                });

            modelBuilder.Entity("JustGo.Models.BlogDetails", b =>
                {
                    b.HasOne("JustGo.Models.Blog", "Blog")
                        .WithMany("BlogDetails")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_BlogDetails_Blog");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("JustGo.Models.ScheduleDetails", b =>
                {
                    b.HasOne("JustGo.Models.Schedule", "Schedule")
                        .WithMany("ScheduleDetails")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ScheduleDetails_Schedule");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("JustGo.Models.Blog", b =>
                {
                    b.Navigation("BlogDetails");
                });

            modelBuilder.Entity("JustGo.Models.Schedule", b =>
                {
                    b.Navigation("ScheduleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
