// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace JustGo.Models
{
    public partial class TravelContext : DbContext
    {
        public TravelContext()
        {
        }

        public TravelContext(DbContextOptions<TravelContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Place> Place { get; set; }
        public virtual DbSet<Weather> Weather { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Place>(entity =>
            {
                entity.Property(e => e.PlaceId)
                    .HasMaxLength(10)
                    .HasColumnName("PlaceID");

                entity.Property(e => e.Add).HasMaxLength(150);

                entity.Property(e => e.Closetime).HasMaxLength(5);

                entity.Property(e => e.Description).HasMaxLength(500);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Opentime).HasMaxLength(5);

                entity.Property(e => e.Region)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.Tel).HasMaxLength(12);

                entity.Property(e => e.Town)
                    .IsRequired()
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<Weather>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("weather");

                entity.Property(e => e.EndTime)
                    .HasColumnType("datetime")
                    .HasColumnName("endTime");

                entity.Property(e => e.Location)
                    .HasMaxLength(30)
                    .HasColumnName("location");

                entity.Property(e => e.LocationsName)
                    .HasMaxLength(30)
                    .HasColumnName("locationsName");

                entity.Property(e => e.MaxT).HasColumnName("maxT");

                entity.Property(e => e.MinT).HasColumnName("minT");

                entity.Property(e => e.Pop12h).HasColumnName("pop12h");

                entity.Property(e => e.StartTime)
                    .HasColumnType("datetime")
                    .HasColumnName("startTime");

                entity.Property(e => e.Uvi).HasColumnName("uvi");

                entity.Property(e => e.WeatherDescription)
                    .HasMaxLength(150)
                    .HasColumnName("weatherDescription");

                entity.Property(e => e.Wx)
                    .HasMaxLength(50)
                    .HasColumnName("wx");
            });

            OnModelCreatingGeneratedFunctions(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}