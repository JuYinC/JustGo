@model IEnumerable<Place>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">        
    <div id="app2">
        <button @@click="axios">click</button>
        {{schedule}}
    </div>
</div>

@section Scripts{
    <script src="https://unpkg.com/axios/dist/axios.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://unpkg.com/vuex@3"></script>
    <script src="https://www.itxst.com/package/sortable/Sortable.min.js"></script>
    <script src="https://www.itxst.com/package/vuedraggable/vuedraggable.umd.min.js"></script>
    

    <script>

         const store = new Vuex.Store({
            state: {                    
                 schedule: {},
                    },
            mutations: {
                updateData(state, status) {
                    console.log(status)
                    this.state.schedule = status
                    console.log(state.schedule)
                }            
            },
            getters: {},
            actions: {
                axiosTest(context,status){
                    axios.get("@Url.Action("testGetShedule","Home")")
                        .then(res => {
                            console.log(res.data)
                            context.commit('updateData', res.data) })
                    .catch(err => console.log("err"))
                    },
                axiosPostTest(context) {                    
                    axios.post("@Url.Action("setSchedule","Schedule")",context.state.schedule).then((res) => { console.log(res.data) })
                }    
             }
        })
        
        Vue.component('vuedraggable', window.vuedraggable.name)

        new Vue({
            store,
            el:'#app2',
            methods: {  
                axios() {
                    this.$store.dispatch("axiosPostTest");
                }
            },
            components: {vuedraggable},
            data() {
                return {
                    drag: true,
                }
            },
            mounted(){
                this.$store.dispatch('axiosTest')                
            },
            computed: {
                schedule() {
                    return JSON.stringify(this.$store.state.schedule)
                }
            }
        })
        

    </script>
    }
