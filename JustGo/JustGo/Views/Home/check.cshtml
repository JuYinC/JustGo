@{
    ViewData["Title"] = "檢視行程 -";
}
@{
    Layout = "_Layout";
}

@section Style{
    <style>
        .footer__waves{
            display: none;
        }
    </style>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/check.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.0/css/bootstrap.min.css" />
}

    <div id="app">

        <div class="container">
            <div class="checkbar">
                <ul class="nav nav-justified nav-tabs" id="pills-tab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active fw-bold" id="pills-home-tab" data-bs-toggle="tab"
                            data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home"
                            aria-selected="true">
                            地圖
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link fw-bold" id="pills-profile-tab" data-bs-toggle="tab"
                            data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile"
                            aria-selected="false">
                            行程
                        </button>
                    </li>
                </ul>
            </div>
            <div class="tab-content" id="pills-tabContent">

                <div class="tab-pane fade show active scheduletab1" id="pills-home" role="tabpanel"
                 aria-labelledby="pills-home-tab">
                    @*<div class="skeltonbar" v-if="loading"></div>*@

                    <div>


                        <div>
                            <div class="row cols-md-2  cols-xs-1">



                                <div class="col-md-4 xs ">
                                    <div class="skeltonbox " v-if="loading">
                                        <div class="skeltonbar"></div>
                                        <div class="skeltoninfo"></div>
                                    </div>
                                    <div class="daysBar fadein">
                                        <div v-for="(day,index) in schedule.details" @@click="showDaySchedule(index)" type="button"
                                         class="days fs-4 col-1 m-2  btn btn-outline-secondary ">
                                            第{{index+1}}天
                                        </div>
                                    </div>
                                    <div class="daysinfo">
                                    <div class="date">{{duringDate[selectDay]}}</div>
                                    <div v-for="(view,index) in daySchedule" class="fadein ">

                                        <div class="row cols-2 viewinfo">
                                            <div class="col-4">{{view.startTime}}-{{view.endTime}}</div>
                                            <div class="col-7">
                                                <div class="viewname">{{view.place.name}}</div>
                                                <div><h6>{{view.place.add}}</h6></div>
                                            </div>
                                        </div>
                                        <div class="row cols-2" v-if="index<daySchedule.length-1">
                                            <div class="col-2">
                                            </div>
                                            <div class="col-10 betweenBox">
                                                <i class="fa-solid fa-car-side"></i> {{roam[selectDay][index]}}
                                            </div>
                                        </div>
                                    </div>
                                    </div>
                                </div>
                                <div id="map" class="col-md-8 cols-xs-1 map-pag3"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                    <div class="row ">
                        <div v-for="(day,dayindex) in schedule.details" class=" col-sm-4 " style="display:inline-block">
                            <div class="viewbox ">
                                <div class="date">{{duringDate[dayindex]}}</div>
                                <div v-for="(view,index) in day">
                                        <div class="row cols-2 viewinfo">
                                            <div class="col-4">{{view.startTime}}-{{view.endTime}}</div>
                                            <div class="col-7">
                                                <div class="viewname">{{view.place.name}}</div>
                                                
                                                <div><h6>{{view.place.add}}</h6></div>
                                                <div class="tagbar" v-if="view.place.minT > 0"><h6><span class="tag">{{view.place.minT}}-{{view.place.maxT}}°C</span> <span class="tag" >{{view.place.wx}}</span></h6></div>
                                            </div>
                                        </div>
                                    <div class="row cols-2" v-if="index<day.length-1">
                                        <div class="col-2">
                                        </div>
                                        <div class="col-10 betweenBox">
                                            <i class="fa-solid fa-car-side"></i> {{roam[dayindex][index]}}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>



    @section Scripts{
    <script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBtVnIXm-IWFLMzIL_XlbCjLyQjSuEVVhk"></script>
    <script src="~/js/site.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"></script>

    <script>





        new Vue({
            el: '#app',
            data() {
                return {
                    schedule: [],
                    daySchedule: [],
                    map: null,
                    icon: {
                        url: "@Url.Content("~/file/photo/placeholder.png")",
                        scaledSize: new google.maps.Size(45, 45),
                        labelOrigin: new google.maps.Point(22, 17)
                    },
                    markers: [],
                    roam: [],
                    duringDate: [],
                    selectWeather: [],
                    loading: true,
                    selectDay:0,
                }
            },
            methods: {
                initMap() {
                    this.map = new google.maps.Map(document.getElementById("map"), {
                        center: { lat: 23.573837, lng: 120.97969 },
                        zoom: 8,  // 0-20
                        mapId: '1d3a304bcea5789e',
                        mapTypeControl: false,  // 換地圖類型
                        streetViewControl: false,  // 街道檢視
                        fullscreenControl: false, // 全螢幕顯示
                        clickableIcons: false,   // 可不可以點地圖上的點
                    });
                    this.map.addListener("dragend", () => {
                        if (this.infowindow) { this.infowindow.close() };
                    })
                },
                showDaySchedule(index) {
                    this.selectDay = index
                    this.daySchedule = this.schedule.details[index]
                    //console.log(this.daySchedule)
                    this.setDayMarker()
                    this.calcDayRoute()
                },
                caltime() {
                    for (let i = 0; i < this.schedule.details.length; i++) {
                        for (let j = 0; j < this.schedule.details[i].length; j++) {

                            let startTime = new Date(this.schedule.details[i][j].startTime)
                            let endTime = new Date(this.schedule.details[i][j].endTime)
                            let hour = startTime.getHours()
                            let min = startTime.getMinutes()

                            if (Number(hour) < 10) {
                                hour = "0" + hour
                            }
                            if (Number(min) < 10) {
                                min = "0" + min
                            }
                            this.schedule.details[i][j].startTime = hour + ":" + min

                            hour = endTime.getHours()
                            min = endTime.getMinutes()
                            if (Number(hour) < 10) {
                                hour = "0" + hour
                            }
                            if (Number(min) < 10) {
                                min = "0" + min
                            }
                            this.schedule.details[i][j].endTime = hour + ":" + min
                        }
                    }
                },
                setMarker() {
                    if (this.markers) {
                        this.markers.forEach((marker) => {
                            marker.setMap(null)
                        });
                        this.markers = []
                    }
                    const bounds = new google.maps.LatLngBounds();
                    let iofSpots = 0
                    for (i = 0; i < this.schedule.details.length; i++) {
                        this.schedule.details[i].map((position, j) => {
                            iofSpots++
                            const marker = new google.maps.Marker({
                                position: { lat: position.place.lat, lng: position.place.lng },
                                label: {
                                    text: `${iofSpots}`,
                                    fontWeight: "bold",
                                },
                                title: position.place.name,
                                map: this.map,
                                icon: this.icon,
                            });
                            bounds.extend(marker.position);
                            // 產生infowindow
                            let contentString =
                                `
                                                                            <div class="infowindow">
                                                                                <div class="infowindow_bar row row-cols-2" >
                                                                                    <div class="infowindow_bar_title col-10">
                                                                                        ${position.place.name}
                                                                                    </div>
                                                                                    <div class="infowindow_bar_divbutton col-2">
                                                                                        <div class="infowindow_bar_button" type="button" onclick="addView()">

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="infowindow_part row">
                                                                        <div class="infowindow_img col-4">
                                                                            <img src="https://www.taiwan.net.tw/pic.ashx?qp=1/big_scenic_spots/pic_11548_18.jpg&sizetype=3" class="infowindow_picture">
                                                                        </div>
                                                                        <div class="infowindow_info col-8">
                                                                            <p>${position.place.description}</p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                             `
                            const infowindow = new google.maps.InfoWindow({
                                content: contentString,
                                disableAutoPan: false,
                            });
                            // 點擊marker開啟infowindow
                            marker.addListener("click", () => {
                                if (this.infowindow) { this.infowindow.close() }
                                infowindow.open({
                                    anchor: marker,
                                    map: this.map,
                                    shouldFocus: false,
                                });
                                this.infowindow = infowindow
                            });
                            this.markers.push(marker);
                        });
                    }
                    this.map.fitBounds(bounds);
                },
                calcRoute() {
                    let request = null;
                    let route = [];
                    let directionsService = new google.maps.DirectionsService();  // 宣告google行程服務
                    directionsRenderer = new google.maps.DirectionsRenderer({  // 宣告google畫路線服務
                        suppressMarkers: true,
                    });
                    //行程變成同一條路徑，上限25個
                    for (i = 0; i < this.schedule.details.length; i++) {
                        for (j = 0; j < this.schedule.details[i].length; j++) {
                            route.push(this.schedule.details[i][j].place)
                        }
                    }
                    // 總行程數 = 1 離開方程式
                    if (route.length < 2) {
                        return
                    } else {
                        // 總行程數 >= 2 加入停靠站
                        const waypts = [];
                        for (i = 1; i < route.length - 1; i++) {
                            waypts.push({ location: { lat: route[i].lat, lng: route[i].lng } })
                        }
                        request = {
                            origin: { lat: route[0].lat, lng: route[0].lng },  //起點
                            destination: { lat: route[route.length - 1].lat, lng: route[route.length - 1].lng },  //終點
                            waypoints: waypts, //中途停靠點
                            travelMode: 'DRIVING', //開車
                        };
                    }
                    directionsRenderer.setMap(this.map); // 設定畫路線顯示在地圖上
                    // request放入Google行程服務，得到結果
                    directionsService.route(request, function(result, status) {
                        if (status == 'OK') {
                            directionsRenderer.setDirections(result);  // 把路線結果傳給畫路線服務
                        }
                    });
                },
                setDayMarker() {
                    if (this.markers) {
                        this.markers.forEach((marker) => {
                            marker.setMap(null)
                        });
                        this.markers = []
                    }
                    if (this.daySchedule.length == 0) {
                        return
                    }
                    const bounds = new google.maps.LatLngBounds();
                    let iofSpots = 0
                    this.daySchedule.map((position, j) => {
                        iofSpots++
                        const marker = new google.maps.Marker({
                            position: { lat: position.place.lat, lng: position.place.lng },
                            label: {
                                text: `${iofSpots}`,
                                fontWeight: "bold",
                            },
                            title: position.place.name,
                            map: this.map,
                            icon: this.icon,
                        });
                        bounds.extend(marker.position);
                        // 產生infowindow
                        let contentString =
                            `
                            <div class="infowindow">
                                <div class="infowindow_bar row row-cols-2" >
                                    <div class="infowindow_bar_title col-10">
                                        ${position.place.name}
                                    </div>
                                    <div class="infowindow_bar_divbutton col-2">
                                        <div class="infowindow_bar_button" type="button" onclick="addView()">

                                        </div>
                                    </div>
                                </div>
                                <div class="infowindow_part row">
                                    <div class="infowindow_img col-4">
                                        <img src="https://www.taiwan.net.tw/pic.ashx?qp=1/big_scenic_spots/pic_11548_18.jpg&sizetype=3" class="infowindow_picture">
                                    </div>
                                    <div class="infowindow_info col-8">
                                        <p><i class="fa-solid fa-house-crack" style="color:#1C0059"></i> ${position.place.add}</p>
                                        <p><i class="fa-solid fa-phone" style="color:#260078"></i> ${position.place.tel}</p>
                                        <p><i class="fa-solid fa-clock" style="color:#3500A8"></i> ${position.place.opentime}-${position.place.closetime}</p>
                                    </div>
                                </div>
                                <button class="infowindow_intro" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample"
                                    aria-expanded="false" aria-controls="collapseExample">
                                    景點介紹
                                </button>
                                <div class="collapse" id="collapseExample">
                                    <div class="infowindow_detail" style="text-indent:2em">
                                        ${position.place.description}
                                    </div>
                                </div>
                            </div>
                            `
                        const infowindow = new google.maps.InfoWindow({
                            content: contentString,
                            disableAutoPan: false,
                        });
                        // 點擊marker開啟infowindow
                        marker.addListener("click", () => {
                            if (this.infowindow) { this.infowindow.close() }
                            infowindow.open({
                                anchor: marker,
                                map: this.map,
                                shouldFocus: false,
                            });
                            this.infowindow = infowindow
                        });
                        this.markers.push(marker);
                    });
                    if (this.daySchedule.length == 1) { this.map.fitBounds(bounds) }
                },
                calcDayRoute() {
                    let request = null;
                    let route = [];
                    let directionsService = new google.maps.DirectionsService();  // 宣告google行程服務
                    directionsRenderer.setMap(null)
                    directionsRenderer = new google.maps.DirectionsRenderer({  // 宣告google畫路線服務
                        suppressMarkers: true,
                    });
                    //行程變成同一條路徑，上限25個

                    for (j = 0; j < this.daySchedule.length; j++) {
                        route.push(this.daySchedule[j].place)
                    }

                    // 總行程數 = 1 離開方程式
                    if (route.length < 2) {
                        return
                    } else {
                        // 總行程數 >= 2 加入停靠站
                        const waypts = [];
                        for (i = 1; i < route.length - 1; i++) {
                            waypts.push({ location: { lat: route[i].lat, lng: route[i].lng } })
                        }
                        request = {
                            origin: { lat: route[0].lat, lng: route[0].lng },  //起點
                            destination: { lat: route[route.length - 1].lat, lng: route[route.length - 1].lng },  //終點
                            waypoints: waypts, //中途停靠點
                            travelMode: 'DRIVING', //開車
                        };
                    }
                    directionsRenderer.setMap(this.map); // 設定畫路線顯示在地圖上
                    // request放入Google行程服務，得到結果
                    directionsService.route(request, function(result, status) {
                        if (status == 'OK') {
                            directionsRenderer.setDirections(result);  // 把路線結果傳給畫路線服務
                        }
                    });
                },
                calroam() {


                    //計算路程
                    for (let i = 0; i < this.schedule.details.length; i++) {
                        let dayRoam = [];
                        for (let j = 1; j < this.schedule.details[i].length; j++) {
                            let roamTime = ""
                            let starthr = this.schedule.details[i][j].startTime.substring(0, 2)
                            let startmin = this.schedule.details[i][j].startTime.substring(3, 5)

                            let endhr = this.schedule.details[i][j - 1].endTime.substring(0, 2)
                            let endmin = this.schedule.details[i][j - 1].endTime.substring(3, 5)

                            if (startmin >= endmin) {
                                if ((starthr - endhr) == 0) {
                                    roamTime = (startmin - endmin) + "分"
                                } else {
                                    roamTime = (starthr - endhr) + "小時" + (startmin - endmin) + "分"
                                }
                            }
                            else {
                                if ((starthr - endhr - 1) == 0) {
                                    roamTime = (startmin - endmin + 60) + "分"
                                } else {
                                    roamTime = (starthr - endhr - 1) + "小時" + (startmin - endmin + 60) + "分"
                                }
                            }
                            dayRoam.push(roamTime)
                        }
                        this.roam.push(dayRoam)
                    }
                    //console.log(this.roam)
                },
                calWeather() {
                    //console.log("wea")
                    let startTime = new Date(this.schedule.startDate)
                    let endTime = new Date(this.schedule.endDate)
                    let day = (endTime - startTime) / (1000 * 3600 * 24) + 1

                    for (let i = 0; i < day; i++) {
                        this.duringDate.push(startTime.toLocaleDateString())
                        startTime = startTime.setDate(startTime.getDate() + 1)
                        startTime = new Date(startTime)
                    }

                    for (let i = 0; i < this.schedule.details.length; i++) {
                        for (let j = 0; j < this.schedule.details[i].length; j++) {
                            let now = new Date()
                            now.setDate(now.getDate() + 7)
                            let travelDate = new Date(this.duringDate[i])
                            //console.log(this.schedule.details[i][j].place.town)
                            if (now > travelDate) {
                                this.selectWeather.find(object => {
                                    //console.log(object.locationsName)
                                    if (this.schedule.details[i][j].place.town == object.locationsName) {
                                        let weatherStart = new Date(object.startTime)
                                        let year = weatherStart.getFullYear()
                                        let month = weatherStart.getMonth()
                                        let date = weatherStart.getDate()
                                        weatherStart = new Date(year, month, date)
                                        if (travelDate.getTime() == weatherStart.getTime()) {
                                            this.schedule.details[i][j].place.minT = object.minT
                                            this.schedule.details[i][j].place.maxT = object.maxT
                                            this.schedule.details[i][j].place.pop12h = object.pop12h
                                            this.schedule.details[i][j].place.uvi = object.uvi
                                            this.schedule.details[i][j].place.wx = object.wx
                                        }
                                    }
                                })
                            }
                        }
                    }
                },

            },
            computed: {

            },
            mounted() {
                let id = window.location.search.substring(1)
                if (id != "") {
                if(this.loading == true){
                this.initMap();
                axios.post("@Url.Action("selectDetail","Schedule")", { ScheduleId: id })
                    .then(res => {
                        this.schedule = res.data;
                        this.daySchedule = this.schedule.details[0];
                        this.caltime();
                        this.setMarker();
                        this.calcRoute();
                        this.calroam();
                    })
                    .then(() => axios.post("@Url.Action("selectWeather","Schedule")")
                        .then(res => {
                            this.selectWeather = res.data
                            this.calWeather();
                        }))
                    .then(() => {                        
                        this.loading = false
                    })
                    .catch(err => console.log(err))
                }

                }
            },
        })
    </script>
}